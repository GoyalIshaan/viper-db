// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: viperdb.proto
// Protobuf C++ Version: 6.32.1

#ifndef viperdb_2eproto_2epb_2eh
#define viperdb_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_viperdb_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_viperdb_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_viperdb_2eproto;
}  // extern "C"
class CreateVectorRequest;
struct CreateVectorRequestDefaultTypeInternal;
extern CreateVectorRequestDefaultTypeInternal _CreateVectorRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateVectorRequest_class_data_;
class CreateVectorResponse;
struct CreateVectorResponseDefaultTypeInternal;
extern CreateVectorResponseDefaultTypeInternal _CreateVectorResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateVectorResponse_class_data_;
class SearchVectorRequest;
struct SearchVectorRequestDefaultTypeInternal;
extern SearchVectorRequestDefaultTypeInternal _SearchVectorRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SearchVectorRequest_class_data_;
class SearchVectorResponse;
struct SearchVectorResponseDefaultTypeInternal;
extern SearchVectorResponseDefaultTypeInternal _SearchVectorResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SearchVectorResponse_class_data_;
class SearchVectorResult;
struct SearchVectorResultDefaultTypeInternal;
extern SearchVectorResultDefaultTypeInternal _SearchVectorResult_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SearchVectorResult_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SearchVectorResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SearchVectorResult) */ {
 public:
  inline SearchVectorResult() : SearchVectorResult(nullptr) {}
  ~SearchVectorResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SearchVectorResult* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SearchVectorResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchVectorResult(::google::protobuf::internal::ConstantInitialized);

  inline SearchVectorResult(const SearchVectorResult& from) : SearchVectorResult(nullptr, from) {}
  inline SearchVectorResult(SearchVectorResult&& from) noexcept
      : SearchVectorResult(nullptr, ::std::move(from)) {}
  inline SearchVectorResult& operator=(const SearchVectorResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchVectorResult& operator=(SearchVectorResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchVectorResult& default_instance() {
    return *reinterpret_cast<const SearchVectorResult*>(
        &_SearchVectorResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SearchVectorResult& a, SearchVectorResult& b) { a.Swap(&b); }
  inline void Swap(SearchVectorResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchVectorResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchVectorResult* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SearchVectorResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchVectorResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchVectorResult& from) { SearchVectorResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SearchVectorResult* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SearchVectorResult"; }

 protected:
  explicit SearchVectorResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SearchVectorResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SearchVectorResult& from);
  SearchVectorResult(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SearchVectorResult&& from) noexcept
      : SearchVectorResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kSimilarityFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // float similarity = 2;
  void clear_similarity() ;
  float similarity() const;
  void set_similarity(float value);

  private:
  float _internal_similarity() const;
  void _internal_set_similarity(float value);

  public:
  // @@protoc_insertion_point(class_scope:SearchVectorResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 29,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SearchVectorResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    float similarity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_viperdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SearchVectorResult_class_data_;
// -------------------------------------------------------------------

class SearchVectorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SearchVectorRequest) */ {
 public:
  inline SearchVectorRequest() : SearchVectorRequest(nullptr) {}
  ~SearchVectorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SearchVectorRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SearchVectorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchVectorRequest(::google::protobuf::internal::ConstantInitialized);

  inline SearchVectorRequest(const SearchVectorRequest& from) : SearchVectorRequest(nullptr, from) {}
  inline SearchVectorRequest(SearchVectorRequest&& from) noexcept
      : SearchVectorRequest(nullptr, ::std::move(from)) {}
  inline SearchVectorRequest& operator=(const SearchVectorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchVectorRequest& operator=(SearchVectorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchVectorRequest& default_instance() {
    return *reinterpret_cast<const SearchVectorRequest*>(
        &_SearchVectorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SearchVectorRequest& a, SearchVectorRequest& b) { a.Swap(&b); }
  inline void Swap(SearchVectorRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchVectorRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchVectorRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SearchVectorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchVectorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchVectorRequest& from) { SearchVectorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SearchVectorRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SearchVectorRequest"; }

 protected:
  explicit SearchVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SearchVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SearchVectorRequest& from);
  SearchVectorRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SearchVectorRequest&& from) noexcept
      : SearchVectorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueryFieldNumber = 1,
    kTopKFieldNumber = 2,
  };
  // repeated float query = 1;
  int query_size() const;
  private:
  int _internal_query_size() const;

  public:
  void clear_query() ;
  float query(int index) const;
  void set_query(int index, float value);
  void add_query(float value);
  const ::google::protobuf::RepeatedField<float>& query() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_query();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_query() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_query();

  public:
  // int32 top_k = 2;
  void clear_top_k() ;
  ::int32_t top_k() const;
  void set_top_k(::int32_t value);

  private:
  ::int32_t _internal_top_k() const;
  void _internal_set_top_k(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SearchVectorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SearchVectorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> query_;
    ::int32_t top_k_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_viperdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SearchVectorRequest_class_data_;
// -------------------------------------------------------------------

class CreateVectorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateVectorResponse) */ {
 public:
  inline CreateVectorResponse() : CreateVectorResponse(nullptr) {}
  ~CreateVectorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateVectorResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateVectorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateVectorResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateVectorResponse(const CreateVectorResponse& from) : CreateVectorResponse(nullptr, from) {}
  inline CreateVectorResponse(CreateVectorResponse&& from) noexcept
      : CreateVectorResponse(nullptr, ::std::move(from)) {}
  inline CreateVectorResponse& operator=(const CreateVectorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateVectorResponse& operator=(CreateVectorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateVectorResponse& default_instance() {
    return *reinterpret_cast<const CreateVectorResponse*>(
        &_CreateVectorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateVectorResponse& a, CreateVectorResponse& b) { a.Swap(&b); }
  inline void Swap(CreateVectorResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateVectorResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateVectorResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateVectorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateVectorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateVectorResponse& from) { CreateVectorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateVectorResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateVectorResponse"; }

 protected:
  explicit CreateVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateVectorResponse& from);
  CreateVectorResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateVectorResponse&& from) noexcept
      : CreateVectorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:CreateVectorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 31,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateVectorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_viperdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateVectorResponse_class_data_;
// -------------------------------------------------------------------

class CreateVectorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateVectorRequest) */ {
 public:
  inline CreateVectorRequest() : CreateVectorRequest(nullptr) {}
  ~CreateVectorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateVectorRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateVectorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateVectorRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateVectorRequest(const CreateVectorRequest& from) : CreateVectorRequest(nullptr, from) {}
  inline CreateVectorRequest(CreateVectorRequest&& from) noexcept
      : CreateVectorRequest(nullptr, ::std::move(from)) {}
  inline CreateVectorRequest& operator=(const CreateVectorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateVectorRequest& operator=(CreateVectorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateVectorRequest& default_instance() {
    return *reinterpret_cast<const CreateVectorRequest*>(
        &_CreateVectorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateVectorRequest& a, CreateVectorRequest& b) { a.Swap(&b); }
  inline void Swap(CreateVectorRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateVectorRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateVectorRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateVectorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateVectorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateVectorRequest& from) { CreateVectorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateVectorRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateVectorRequest"; }

 protected:
  explicit CreateVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateVectorRequest& from);
  CreateVectorRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateVectorRequest&& from) noexcept
      : CreateVectorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVectorFieldNumber = 1,
  };
  // repeated float vector = 1;
  int vector_size() const;
  private:
  int _internal_vector_size() const;

  public:
  void clear_vector() ;
  float vector(int index) const;
  void set_vector(int index, float value);
  void add_vector(float value);
  const ::google::protobuf::RepeatedField<float>& vector() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_vector();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_vector() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_vector();

  public:
  // @@protoc_insertion_point(class_scope:CreateVectorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateVectorRequest& from_msg);
    ::google::protobuf::RepeatedField<float> vector_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_viperdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateVectorRequest_class_data_;
// -------------------------------------------------------------------

class SearchVectorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SearchVectorResponse) */ {
 public:
  inline SearchVectorResponse() : SearchVectorResponse(nullptr) {}
  ~SearchVectorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SearchVectorResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SearchVectorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchVectorResponse(::google::protobuf::internal::ConstantInitialized);

  inline SearchVectorResponse(const SearchVectorResponse& from) : SearchVectorResponse(nullptr, from) {}
  inline SearchVectorResponse(SearchVectorResponse&& from) noexcept
      : SearchVectorResponse(nullptr, ::std::move(from)) {}
  inline SearchVectorResponse& operator=(const SearchVectorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchVectorResponse& operator=(SearchVectorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchVectorResponse& default_instance() {
    return *reinterpret_cast<const SearchVectorResponse*>(
        &_SearchVectorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SearchVectorResponse& a, SearchVectorResponse& b) { a.Swap(&b); }
  inline void Swap(SearchVectorResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchVectorResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchVectorResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SearchVectorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchVectorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchVectorResponse& from) { SearchVectorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SearchVectorResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SearchVectorResponse"; }

 protected:
  explicit SearchVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SearchVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SearchVectorResponse& from);
  SearchVectorResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SearchVectorResponse&& from) noexcept
      : SearchVectorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .SearchVectorResult results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::SearchVectorResult* PROTOBUF_NONNULL mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::SearchVectorResult>* PROTOBUF_NONNULL mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::SearchVectorResult>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::SearchVectorResult>* PROTOBUF_NONNULL _internal_mutable_results();
  public:
  const ::SearchVectorResult& results(int index) const;
  ::SearchVectorResult* PROTOBUF_NONNULL add_results();
  const ::google::protobuf::RepeatedPtrField<::SearchVectorResult>& results() const;
  // @@protoc_insertion_point(class_scope:SearchVectorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SearchVectorResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::SearchVectorResult > results_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_viperdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SearchVectorResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateVectorRequest

// repeated float vector = 1;
inline int CreateVectorRequest::_internal_vector_size() const {
  return _internal_vector().size();
}
inline int CreateVectorRequest::vector_size() const {
  return _internal_vector_size();
}
inline void CreateVectorRequest::clear_vector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vector_.Clear();
}
inline float CreateVectorRequest::vector(int index) const {
  // @@protoc_insertion_point(field_get:CreateVectorRequest.vector)
  return _internal_vector().Get(index);
}
inline void CreateVectorRequest::set_vector(int index, float value) {
  _internal_mutable_vector()->Set(index, value);
  // @@protoc_insertion_point(field_set:CreateVectorRequest.vector)
}
inline void CreateVectorRequest::add_vector(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_vector()->Add(value);
  // @@protoc_insertion_point(field_add:CreateVectorRequest.vector)
}
inline const ::google::protobuf::RepeatedField<float>& CreateVectorRequest::vector() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CreateVectorRequest.vector)
  return _internal_vector();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL CreateVectorRequest::mutable_vector()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CreateVectorRequest.vector)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vector();
}
inline const ::google::protobuf::RepeatedField<float>&
CreateVectorRequest::_internal_vector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vector_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
CreateVectorRequest::_internal_mutable_vector() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vector_;
}

// -------------------------------------------------------------------

// SearchVectorRequest

// repeated float query = 1;
inline int SearchVectorRequest::_internal_query_size() const {
  return _internal_query().size();
}
inline int SearchVectorRequest::query_size() const {
  return _internal_query_size();
}
inline void SearchVectorRequest::clear_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.Clear();
}
inline float SearchVectorRequest::query(int index) const {
  // @@protoc_insertion_point(field_get:SearchVectorRequest.query)
  return _internal_query().Get(index);
}
inline void SearchVectorRequest::set_query(int index, float value) {
  _internal_mutable_query()->Set(index, value);
  // @@protoc_insertion_point(field_set:SearchVectorRequest.query)
}
inline void SearchVectorRequest::add_query(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_query()->Add(value);
  // @@protoc_insertion_point(field_add:SearchVectorRequest.query)
}
inline const ::google::protobuf::RepeatedField<float>& SearchVectorRequest::query() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SearchVectorRequest.query)
  return _internal_query();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL SearchVectorRequest::mutable_query()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SearchVectorRequest.query)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_query();
}
inline const ::google::protobuf::RepeatedField<float>&
SearchVectorRequest::_internal_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
SearchVectorRequest::_internal_mutable_query() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.query_;
}

// int32 top_k = 2;
inline void SearchVectorRequest::clear_top_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_k_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t SearchVectorRequest::top_k() const {
  // @@protoc_insertion_point(field_get:SearchVectorRequest.top_k)
  return _internal_top_k();
}
inline void SearchVectorRequest::set_top_k(::int32_t value) {
  _internal_set_top_k(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:SearchVectorRequest.top_k)
}
inline ::int32_t SearchVectorRequest::_internal_top_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_k_;
}
inline void SearchVectorRequest::_internal_set_top_k(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_k_ = value;
}

// -------------------------------------------------------------------

// CreateVectorResponse

// string id = 1;
inline void CreateVectorResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CreateVectorResponse::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateVectorResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateVectorResponse::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateVectorResponse.id)
}
inline ::std::string* PROTOBUF_NONNULL CreateVectorResponse::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:CreateVectorResponse.id)
  return _s;
}
inline const ::std::string& CreateVectorResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CreateVectorResponse::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateVectorResponse::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateVectorResponse::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateVectorResponse.id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void CreateVectorResponse::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateVectorResponse.id)
}

// -------------------------------------------------------------------

// SearchVectorResponse

// repeated .SearchVectorResult results = 1;
inline int SearchVectorResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int SearchVectorResponse::results_size() const {
  return _internal_results_size();
}
inline void SearchVectorResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::SearchVectorResult* PROTOBUF_NONNULL SearchVectorResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SearchVectorResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::SearchVectorResult>* PROTOBUF_NONNULL SearchVectorResponse::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SearchVectorResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::SearchVectorResult& SearchVectorResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SearchVectorResponse.results)
  return _internal_results().Get(index);
}
inline ::SearchVectorResult* PROTOBUF_NONNULL SearchVectorResponse::add_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::SearchVectorResult* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:SearchVectorResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::SearchVectorResult>& SearchVectorResponse::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SearchVectorResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::SearchVectorResult>&
SearchVectorResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::SearchVectorResult>* PROTOBUF_NONNULL
SearchVectorResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// SearchVectorResult

// string id = 1;
inline void SearchVectorResult::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& SearchVectorResult::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SearchVectorResult.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SearchVectorResult::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SearchVectorResult.id)
}
inline ::std::string* PROTOBUF_NONNULL SearchVectorResult::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:SearchVectorResult.id)
  return _s;
}
inline const ::std::string& SearchVectorResult::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SearchVectorResult::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SearchVectorResult::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SearchVectorResult::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SearchVectorResult.id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void SearchVectorResult::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:SearchVectorResult.id)
}

// float similarity = 2;
inline void SearchVectorResult::clear_similarity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.similarity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline float SearchVectorResult::similarity() const {
  // @@protoc_insertion_point(field_get:SearchVectorResult.similarity)
  return _internal_similarity();
}
inline void SearchVectorResult::set_similarity(float value) {
  _internal_set_similarity(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:SearchVectorResult.similarity)
}
inline float SearchVectorResult::_internal_similarity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.similarity_;
}
inline void SearchVectorResult::_internal_set_similarity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.similarity_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // viperdb_2eproto_2epb_2eh
