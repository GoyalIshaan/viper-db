// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: viperdb.proto
// Protobuf C++ Version: 6.32.1

#include "viperdb.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SearchVectorResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        similarity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchVectorResult::SearchVectorResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SearchVectorResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchVectorResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchVectorResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchVectorResultDefaultTypeInternal() {}
  union {
    SearchVectorResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchVectorResultDefaultTypeInternal _SearchVectorResult_default_instance_;

inline constexpr SearchVectorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        query_{},
        top_k_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchVectorRequest::SearchVectorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SearchVectorRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchVectorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchVectorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchVectorRequestDefaultTypeInternal() {}
  union {
    SearchVectorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchVectorRequestDefaultTypeInternal _SearchVectorRequest_default_instance_;

inline constexpr CreateVectorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CreateVectorResponse::CreateVectorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateVectorResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateVectorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVectorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVectorResponseDefaultTypeInternal() {}
  union {
    CreateVectorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVectorResponseDefaultTypeInternal _CreateVectorResponse_default_instance_;

inline constexpr CreateVectorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vector_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateVectorRequest::CreateVectorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateVectorRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateVectorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVectorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVectorRequestDefaultTypeInternal() {}
  union {
    CreateVectorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVectorRequestDefaultTypeInternal _CreateVectorRequest_default_instance_;

inline constexpr SearchVectorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : results_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchVectorResponse::SearchVectorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SearchVectorResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchVectorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchVectorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchVectorResponseDefaultTypeInternal() {}
  union {
    SearchVectorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchVectorResponseDefaultTypeInternal _SearchVectorResponse_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_viperdb_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_viperdb_2eproto = nullptr;
const ::uint32_t
    TableStruct_viperdb_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::CreateVectorRequest, _impl_.vector_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::SearchVectorRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::SearchVectorRequest, _impl_.query_),
        PROTOBUF_FIELD_OFFSET(::SearchVectorRequest, _impl_.top_k_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::CreateVectorResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::CreateVectorResponse, _impl_.id_),
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::SearchVectorResponse, _impl_.results_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::SearchVectorResult, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::SearchVectorResult, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SearchVectorResult, _impl_.similarity_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::CreateVectorRequest)},
        {2, sizeof(::SearchVectorRequest)},
        {9, sizeof(::CreateVectorResponse)},
        {14, sizeof(::SearchVectorResponse)},
        {16, sizeof(::SearchVectorResult)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CreateVectorRequest_default_instance_._instance,
    &::_SearchVectorRequest_default_instance_._instance,
    &::_CreateVectorResponse_default_instance_._instance,
    &::_SearchVectorResponse_default_instance_._instance,
    &::_SearchVectorResult_default_instance_._instance,
};
const char descriptor_table_protodef_viperdb_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rviperdb.proto\"%\n\023CreateVectorRequest\022\016"
    "\n\006vector\030\001 \003(\002\"3\n\023SearchVectorRequest\022\r\n"
    "\005query\030\001 \003(\002\022\r\n\005top_k\030\002 \001(\005\"\"\n\024CreateVec"
    "torResponse\022\n\n\002id\030\001 \001(\t\"<\n\024SearchVectorR"
    "esponse\022$\n\007results\030\001 \003(\0132\023.SearchVectorR"
    "esult\"4\n\022SearchVectorResult\022\n\n\002id\030\001 \001(\t\022"
    "\022\n\nsimilarity\030\002 \001(\0022\203\001\n\007ViperDB\022;\n\014Creat"
    "eVector\022\024.CreateVectorRequest\032\025.CreateVe"
    "ctorResponse\022;\n\014SearchVector\022\024.SearchVec"
    "torRequest\032\025.SearchVectorResponseb\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_viperdb_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_viperdb_2eproto = {
    false,
    false,
    401,
    descriptor_table_protodef_viperdb_2eproto,
    "viperdb.proto",
    &descriptor_table_viperdb_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_viperdb_2eproto::offsets,
    file_level_enum_descriptors_viperdb_2eproto,
    file_level_service_descriptors_viperdb_2eproto,
};
// ===================================================================

class CreateVectorRequest::_Internal {
 public:
};

CreateVectorRequest::CreateVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateVectorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CreateVectorRequest)
}
PROTOBUF_NDEBUG_INLINE CreateVectorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::CreateVectorRequest& from_msg)
      : vector_{visibility, arena, from.vector_},
        _cached_size_{0} {}

CreateVectorRequest::CreateVectorRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateVectorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateVectorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateVectorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CreateVectorRequest)
}
PROTOBUF_NDEBUG_INLINE CreateVectorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : vector_{visibility, arena},
        _cached_size_{0} {}

inline void CreateVectorRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateVectorRequest::~CreateVectorRequest() {
  // @@protoc_insertion_point(destructor:CreateVectorRequest)
  SharedDtor(*this);
}
inline void CreateVectorRequest::SharedDtor(MessageLite& self) {
  CreateVectorRequest& this_ = static_cast<CreateVectorRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateVectorRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateVectorRequest(arena);
}
constexpr auto CreateVectorRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateVectorRequest, _impl_.vector_) +
          decltype(CreateVectorRequest::_impl_.vector_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CreateVectorRequest), alignof(CreateVectorRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateVectorRequest::PlacementNew_,
                                 sizeof(CreateVectorRequest),
                                 alignof(CreateVectorRequest));
  }
}
constexpr auto CreateVectorRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateVectorRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateVectorRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateVectorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateVectorRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateVectorRequest>(), &CreateVectorRequest::ByteSizeLong,
              &CreateVectorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateVectorRequest, _impl_._cached_size_),
          false,
      },
      &CreateVectorRequest::kDescriptorMethods,
      &descriptor_table_viperdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateVectorRequest_class_data_ =
        CreateVectorRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateVectorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateVectorRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateVectorRequest_class_data_.tc_table);
  return CreateVectorRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CreateVectorRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CreateVectorRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CreateVectorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float vector = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateVectorRequest, _impl_.vector_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float vector = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVectorRequest, _impl_.vector_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CreateVectorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateVectorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateVectorRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateVectorRequest& this_ = static_cast<const CreateVectorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateVectorRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateVectorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:CreateVectorRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float vector = 1;
  if (this_._internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(1, this_._internal_vector(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateVectorRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateVectorRequest::ByteSizeLong(const MessageLite& base) {
  const CreateVectorRequest& this_ = static_cast<const CreateVectorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateVectorRequest::ByteSizeLong() const {
  const CreateVectorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CreateVectorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float vector = 1;
    {
      ::size_t data_size = ::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_vector_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateVectorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateVectorRequest*>(&to_msg);
  auto& from = static_cast<const CreateVectorRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateVectorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vector()->MergeFrom(from._internal_vector());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVectorRequest::CopyFrom(const CreateVectorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateVectorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateVectorRequest::InternalSwap(CreateVectorRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vector_.InternalSwap(&other->_impl_.vector_);
}

::google::protobuf::Metadata CreateVectorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchVectorRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SearchVectorRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_._has_bits_);
};

SearchVectorRequest::SearchVectorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchVectorRequest)
}
PROTOBUF_NDEBUG_INLINE SearchVectorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::SearchVectorRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        query_{visibility, arena, from.query_} {}

SearchVectorRequest::SearchVectorRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SearchVectorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchVectorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.top_k_ = from._impl_.top_k_;

  // @@protoc_insertion_point(copy_constructor:SearchVectorRequest)
}
PROTOBUF_NDEBUG_INLINE SearchVectorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        query_{visibility, arena} {}

inline void SearchVectorRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.top_k_ = {};
}
SearchVectorRequest::~SearchVectorRequest() {
  // @@protoc_insertion_point(destructor:SearchVectorRequest)
  SharedDtor(*this);
}
inline void SearchVectorRequest::SharedDtor(MessageLite& self) {
  SearchVectorRequest& this_ = static_cast<SearchVectorRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SearchVectorRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SearchVectorRequest(arena);
}
constexpr auto SearchVectorRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_.query_) +
          decltype(SearchVectorRequest::_impl_.query_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchVectorRequest), alignof(SearchVectorRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchVectorRequest::PlacementNew_,
                                 sizeof(SearchVectorRequest),
                                 alignof(SearchVectorRequest));
  }
}
constexpr auto SearchVectorRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SearchVectorRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SearchVectorRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SearchVectorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SearchVectorRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SearchVectorRequest>(), &SearchVectorRequest::ByteSizeLong,
              &SearchVectorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_._cached_size_),
          false,
      },
      &SearchVectorRequest::kDescriptorMethods,
      &descriptor_table_viperdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SearchVectorRequest_class_data_ =
        SearchVectorRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SearchVectorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SearchVectorRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SearchVectorRequest_class_data_.tc_table);
  return SearchVectorRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
SearchVectorRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SearchVectorRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SearchVectorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 top_k = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchVectorRequest, _impl_.top_k_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_.top_k_)}},
    // repeated float query = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_.query_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float query = 1;
    {PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_.query_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // int32 top_k = 2;
    {PROTOBUF_FIELD_OFFSET(SearchVectorRequest, _impl_.top_k_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SearchVectorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchVectorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.query_.Clear();
  _impl_.top_k_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SearchVectorRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SearchVectorRequest& this_ = static_cast<const SearchVectorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SearchVectorRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SearchVectorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:SearchVectorRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float query = 1;
  if (this_._internal_query_size() > 0) {
    target = stream->WriteFixedPacked(1, this_._internal_query(), target);
  }

  // int32 top_k = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_top_k() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_top_k(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchVectorRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SearchVectorRequest::ByteSizeLong(const MessageLite& base) {
  const SearchVectorRequest& this_ = static_cast<const SearchVectorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SearchVectorRequest::ByteSizeLong() const {
  const SearchVectorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SearchVectorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float query = 1;
    {
      ::size_t data_size = ::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_query_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
   {
    // int32 top_k = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_top_k() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_top_k());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SearchVectorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchVectorRequest*>(&to_msg);
  auto& from = static_cast<const SearchVectorRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchVectorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_query()->MergeFrom(from._internal_query());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_top_k() != 0) {
      _this->_impl_.top_k_ = from._impl_.top_k_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchVectorRequest::CopyFrom(const SearchVectorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchVectorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchVectorRequest::InternalSwap(SearchVectorRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.query_.InternalSwap(&other->_impl_.query_);
  swap(_impl_.top_k_, other->_impl_.top_k_);
}

::google::protobuf::Metadata SearchVectorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateVectorResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateVectorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateVectorResponse, _impl_._has_bits_);
};

CreateVectorResponse::CreateVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateVectorResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CreateVectorResponse)
}
PROTOBUF_NDEBUG_INLINE CreateVectorResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::CreateVectorResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

CreateVectorResponse::CreateVectorResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateVectorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateVectorResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateVectorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CreateVectorResponse)
}
PROTOBUF_NDEBUG_INLINE CreateVectorResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena) {}

inline void CreateVectorResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateVectorResponse::~CreateVectorResponse() {
  // @@protoc_insertion_point(destructor:CreateVectorResponse)
  SharedDtor(*this);
}
inline void CreateVectorResponse::SharedDtor(MessageLite& self) {
  CreateVectorResponse& this_ = static_cast<CreateVectorResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateVectorResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateVectorResponse(arena);
}
constexpr auto CreateVectorResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateVectorResponse),
                                            alignof(CreateVectorResponse));
}
constexpr auto CreateVectorResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateVectorResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateVectorResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateVectorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateVectorResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateVectorResponse>(), &CreateVectorResponse::ByteSizeLong,
              &CreateVectorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateVectorResponse, _impl_._cached_size_),
          false,
      },
      &CreateVectorResponse::kDescriptorMethods,
      &descriptor_table_viperdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateVectorResponse_class_data_ =
        CreateVectorResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateVectorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateVectorResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateVectorResponse_class_data_.tc_table);
  return CreateVectorResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2>
CreateVectorResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateVectorResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CreateVectorResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CreateVectorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateVectorResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVectorResponse, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\2\0\0\0\0\0\0"
    "CreateVectorResponse"
    "id"
  }},
};
PROTOBUF_NOINLINE void CreateVectorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateVectorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateVectorResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateVectorResponse& this_ = static_cast<const CreateVectorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateVectorResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateVectorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:CreateVectorResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CreateVectorResponse.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateVectorResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateVectorResponse::ByteSizeLong(const MessageLite& base) {
  const CreateVectorResponse& this_ = static_cast<const CreateVectorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateVectorResponse::ByteSizeLong() const {
  const CreateVectorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CreateVectorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateVectorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateVectorResponse*>(&to_msg);
  auto& from = static_cast<const CreateVectorResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateVectorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_id().empty()) {
      _this->_internal_set_id(from._internal_id());
    } else {
      if (_this->_impl_.id_.IsDefault()) {
        _this->_internal_set_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVectorResponse::CopyFrom(const CreateVectorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateVectorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateVectorResponse::InternalSwap(CreateVectorResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata CreateVectorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchVectorResponse::_Internal {
 public:
};

SearchVectorResponse::SearchVectorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchVectorResponse)
}
PROTOBUF_NDEBUG_INLINE SearchVectorResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::SearchVectorResponse& from_msg)
      : results_{visibility, arena, from.results_},
        _cached_size_{0} {}

SearchVectorResponse::SearchVectorResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SearchVectorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchVectorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SearchVectorResponse)
}
PROTOBUF_NDEBUG_INLINE SearchVectorResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : results_{visibility, arena},
        _cached_size_{0} {}

inline void SearchVectorResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SearchVectorResponse::~SearchVectorResponse() {
  // @@protoc_insertion_point(destructor:SearchVectorResponse)
  SharedDtor(*this);
}
inline void SearchVectorResponse::SharedDtor(MessageLite& self) {
  SearchVectorResponse& this_ = static_cast<SearchVectorResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SearchVectorResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SearchVectorResponse(arena);
}
constexpr auto SearchVectorResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchVectorResponse, _impl_.results_) +
          decltype(SearchVectorResponse::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchVectorResponse), alignof(SearchVectorResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchVectorResponse::PlacementNew_,
                                 sizeof(SearchVectorResponse),
                                 alignof(SearchVectorResponse));
  }
}
constexpr auto SearchVectorResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SearchVectorResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SearchVectorResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SearchVectorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SearchVectorResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SearchVectorResponse>(), &SearchVectorResponse::ByteSizeLong,
              &SearchVectorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SearchVectorResponse, _impl_._cached_size_),
          false,
      },
      &SearchVectorResponse::kDescriptorMethods,
      &descriptor_table_viperdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SearchVectorResponse_class_data_ =
        SearchVectorResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SearchVectorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SearchVectorResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SearchVectorResponse_class_data_.tc_table);
  return SearchVectorResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
SearchVectorResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SearchVectorResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SearchVectorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SearchVectorResult results = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchVectorResponse, _impl_.results_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SearchVectorResult results = 1;
    {PROTOBUF_FIELD_OFFSET(SearchVectorResponse, _impl_.results_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::SearchVectorResult>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SearchVectorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchVectorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SearchVectorResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SearchVectorResponse& this_ = static_cast<const SearchVectorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SearchVectorResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SearchVectorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:SearchVectorResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SearchVectorResult results = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchVectorResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SearchVectorResponse::ByteSizeLong(const MessageLite& base) {
  const SearchVectorResponse& this_ = static_cast<const SearchVectorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SearchVectorResponse::ByteSizeLong() const {
  const SearchVectorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SearchVectorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .SearchVectorResult results = 1;
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SearchVectorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchVectorResponse*>(&to_msg);
  auto& from = static_cast<const SearchVectorResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchVectorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchVectorResponse::CopyFrom(const SearchVectorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchVectorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchVectorResponse::InternalSwap(SearchVectorResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
}

::google::protobuf::Metadata SearchVectorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchVectorResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SearchVectorResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_._has_bits_);
};

SearchVectorResult::SearchVectorResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchVectorResult)
}
PROTOBUF_NDEBUG_INLINE SearchVectorResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::SearchVectorResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

SearchVectorResult::SearchVectorResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SearchVectorResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SearchVectorResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchVectorResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.similarity_ = from._impl_.similarity_;

  // @@protoc_insertion_point(copy_constructor:SearchVectorResult)
}
PROTOBUF_NDEBUG_INLINE SearchVectorResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena) {}

inline void SearchVectorResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.similarity_ = {};
}
SearchVectorResult::~SearchVectorResult() {
  // @@protoc_insertion_point(destructor:SearchVectorResult)
  SharedDtor(*this);
}
inline void SearchVectorResult::SharedDtor(MessageLite& self) {
  SearchVectorResult& this_ = static_cast<SearchVectorResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SearchVectorResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SearchVectorResult(arena);
}
constexpr auto SearchVectorResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SearchVectorResult),
                                            alignof(SearchVectorResult));
}
constexpr auto SearchVectorResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SearchVectorResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SearchVectorResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SearchVectorResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SearchVectorResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SearchVectorResult>(), &SearchVectorResult::ByteSizeLong,
              &SearchVectorResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_._cached_size_),
          false,
      },
      &SearchVectorResult::kDescriptorMethods,
      &descriptor_table_viperdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SearchVectorResult_class_data_ =
        SearchVectorResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SearchVectorResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SearchVectorResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SearchVectorResult_class_data_.tc_table);
  return SearchVectorResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 29, 2>
SearchVectorResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SearchVectorResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SearchVectorResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float similarity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_.similarity_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float similarity = 2;
    {PROTOBUF_FIELD_OFFSET(SearchVectorResult, _impl_.similarity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\22\2\0\0\0\0\0\0"
    "SearchVectorResult"
    "id"
  }},
};
PROTOBUF_NOINLINE void SearchVectorResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchVectorResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.similarity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SearchVectorResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SearchVectorResult& this_ = static_cast<const SearchVectorResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SearchVectorResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SearchVectorResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:SearchVectorResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchVectorResult.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // float similarity = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_similarity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_similarity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchVectorResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SearchVectorResult::ByteSizeLong(const MessageLite& base) {
  const SearchVectorResult& this_ = static_cast<const SearchVectorResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SearchVectorResult::ByteSizeLong() const {
  const SearchVectorResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SearchVectorResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // float similarity = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_similarity()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SearchVectorResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchVectorResult*>(&to_msg);
  auto& from = static_cast<const SearchVectorResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchVectorResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_similarity()) != 0) {
        _this->_impl_.similarity_ = from._impl_.similarity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchVectorResult::CopyFrom(const SearchVectorResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchVectorResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchVectorResult::InternalSwap(SearchVectorResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.similarity_, other->_impl_.similarity_);
}

::google::protobuf::Metadata SearchVectorResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_viperdb_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
